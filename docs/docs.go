// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/user": {
            "get": {
                "description": "用户列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "用户列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "年龄",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "生日 2020-01-01",
                        "name": "birthday",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "邮箱",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "手机号",
                        "name": "mobile",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "昵称",
                        "name": "nickname",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "页码",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "每页条数",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "响应结果",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httpx.Resp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handler.UserListRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "新增用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "新增用户",
                "parameters": [
                    {
                        "description": "body参数",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UserCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "响应结果",
                        "schema": {
                            "$ref": "#/definitions/httpx.Resp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.UserCreateReq": {
            "type": "object",
            "required": [
                "avatar",
                "birth_date",
                "care_type",
                "description",
                "id_card",
                "mobile",
                "name",
                "sex"
            ],
            "properties": {
                "avatar": {
                    "description": "头像地址",
                    "type": "string",
                    "example": "https://www.baidu.com/img/bd_logo1.png"
                },
                "birth_date": {
                    "description": "生日",
                    "type": "string",
                    "example": "2020-01-01"
                },
                "care_type": {
                    "description": "1:身份证;2:护照",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ],
                    "example": 1
                },
                "description": {
                    "description": "描述",
                    "type": "string",
                    "example": "这是一段人物的描述"
                },
                "id_card": {
                    "description": "证件号码",
                    "type": "string",
                    "example": "123456789012345678"
                },
                "mobile": {
                    "description": "手机号",
                    "type": "string",
                    "example": "1389999999"
                },
                "name": {
                    "description": "姓名",
                    "type": "string",
                    "example": "张三"
                },
                "sex": {
                    "description": "性别",
                    "type": "string",
                    "enum": [
                        "M",
                        "F",
                        "O"
                    ],
                    "example": "O"
                }
            }
        },
        "handler.UserListItem": {
            "type": "object",
            "required": [
                "birth_date",
                "name",
                "sex"
            ],
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "https://www.baidu.com/img/bd_logo1.png"
                },
                "birth_date": {
                    "type": "string",
                    "example": "2020-01-01"
                },
                "description": {
                    "type": "string",
                    "example": "这是一个用户"
                },
                "id_card": {
                    "type": "string",
                    "example": "123456789012345678"
                },
                "mobile": {
                    "type": "string",
                    "example": "13888888888"
                },
                "name": {
                    "type": "string",
                    "example": "张三"
                },
                "sex": {
                    "description": "M: 男性 F: 女性 O: 其他",
                    "type": "string",
                    "enum": [
                        "M",
                        "F",
                        "O"
                    ]
                }
            }
        },
        "handler.UserListRes": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.UserListItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "httpx.Resp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "业务错误码,正常返回为200，错误返回为错误码",
                    "type": "integer"
                },
                "data": {
                    "description": "返回数据"
                },
                "msg": {
                    "description": "错误信息，如果状态码为200，msg为OK",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
