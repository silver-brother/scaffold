// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/user": {
            "get": {
                "description": "用户列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "用户列表",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 101,
                        "description": "年龄",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2020-01-01",
                        "description": "生日",
                        "name": "birthday",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "zhangsanfeng@163.com",
                        "description": "邮箱",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "13888888888",
                        "description": "手机号",
                        "name": "mobile",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "张三疯",
                        "description": "昵称",
                        "name": "nickname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "张三",
                        "description": "用户名",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "响应结果",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/scaffold_common_httpx.Resp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_handler.UserListRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "新增用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "新增用户",
                "parameters": [
                    {
                        "description": "body参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler.UserCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "响应结果",
                        "schema": {
                            "$ref": "#/definitions/scaffold_common_httpx.Resp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_handler.UserCreateReq": {
            "type": "object",
            "required": [
                "email",
                "nickname",
                "password",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "maximum": 120,
                    "minimum": 1
                },
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_handler.UserListItem": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "邮箱",
                    "type": "string"
                },
                "id": {
                    "description": "用户ID",
                    "type": "integer"
                },
                "nickname": {
                    "description": "昵称",
                    "type": "string"
                },
                "password": {
                    "description": "密码",
                    "type": "string"
                },
                "username": {
                    "description": "用户名",
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "internal_handler.UserListRes": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_handler.UserListItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "scaffold_common_httpx.Resp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "业务错误码,正常返回为200，错误返回为错误码",
                    "type": "integer"
                },
                "data": {
                    "description": "返回数据"
                },
                "msg": {
                    "description": "错误信息，如果状态码为200，msg为OK",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
